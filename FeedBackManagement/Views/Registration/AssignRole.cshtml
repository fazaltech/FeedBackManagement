@model FeedBackManagement.Models.user

@{
    ViewBag.Title = "Assign Role";
}

<h2>AssignRole</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @*<div class="form-group">
                @Html.LabelFor(model => model.user_name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.user_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.user_name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email_id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.role, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.user_name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.user_name)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.email_id)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.email_id)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.role)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.role)
            </dd>
        </dl>
        
        <div class="form-group">
            <b>Change Roles</b>
            <select name="Roles" id="Roles" class="form-control" style="width:20%;">
                <option value="manager">Manager</option>
                <option value="admin">Admin</option>

            </select>
        </div>
        @*@Html.DropDownList("Assign Role",
            new SelectList(Enum.GetValues(typeof(Roles))),
            "Select Role",
            new { @class = "form-control" })*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
